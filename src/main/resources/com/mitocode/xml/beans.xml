<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-init-method="" default-destroy-method=""
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

<bean id="mundo" class="com.mitocode.beans.Mundo">
	<property name="saludo" value="Hola mundo">
	</property>
</bean>

<bean id="persona" class="com.mitocode.beans.Persona">
	<constructor-arg index="2" value="mitocode"></constructor-arg>
	<constructor-arg index="0" value="1"></constructor-arg>
	<constructor-arg index="1" value="Cesar"></constructor-arg>
</bean>

<!-- Autowiring , sometimes it gets confusing !-->
<bean id="persona2PorAuto" class="com.mitocode.beans.Persona2" autowire="byName"/>


<bean id="persona2" class="com.mitocode.beans.Persona2" name="personaAlias">
	<property name="id" value="1"/>
	<property name="nombre" value="Cesar"/>
	<property name="apodo" value="tmac"/>
	<property name="pais" ref="pais"/>
</bean>

<bean id="pais" class="com.mitocode.beans.Pais">
	<property name="nombre" value="Mexico"/>
	<property name="ciudad" ref="ciudad"/>
</bean>

<bean id="ciudad" class="com.mitocode.beans.Ciudad">
	<property name="nombre" value="DF"/>
	<property name="colonia">
			<!-- Beans anidados !!! -->
		<bean id="colonia" class="com.mitocode.beans.Colonia">
			<property name="nombre" value="Lomas"/>
		</bean>
	</property>
	
	<property name="calles">
		<list>
			<ref bean="calle1"/>
			<ref bean="calle2"/>
			<ref bean="calle3"/>
		</list>
	</property>
	
</bean>

<bean id="calle1" class="com.mitocode.beans.Calle">
	<property name="nombre" value="ninos"/>
</bean>
<bean id="calle2" class="com.mitocode.beans.Calle">
	<property name="nombre" value="15Sep"/>
</bean>
<bean id="calle3" class="com.mitocode.beans.Calle">
	<property name="nombre" value="joseMa"/>
</bean>


<alias name="persona" alias="personaBean"/>


<!-- Herencia de beans -->

<bean id="trianguloPadre" class="com.mitocode.beans.Triangulo">
	<property name="puntoA" ref="puntoA"></property>
</bean>

<bean id="triangulo1" class="com.mitocode.beans.Triangulo" parent="trianguloPadre">
	<property name="puntoB" ref="puntoB"></property>
	<property name="puntoC" ref="puntoC"></property>	
</bean>

<bean id="puntoA" class="com.mitocode.beans.Punto">
	<property name="x" value="0"></property>
	<property name="y" value="1"></property>	
</bean>
<bean id="puntoB" class="com.mitocode.beans.Punto">
	<property name="x" value="2"></property>
	<property name="y" value="3"></property>	
</bean>
<bean id="puntoC" class="com.mitocode.beans.Punto">
	<property name="x" value="4"></property>
	<property name="y" value="5"></property>	
</bean>



<bean id="cuadradoPadre" class="com.mitocode.beans.Cuadrado">
	<property name="puntos">
		<list>
			<ref bean="puntoA"/>
			<ref bean="puntoB"/>
		</list>
	</property>
</bean>

<bean id="cuadrado1" class="com.mitocode.beans.Cuadrado" parent="cuadradoPadre">
	<property name="puntos">
		<list merge="true"> <!-- Para que no sobrescriba a los elem del bean padre -->
			<ref bean="puntoC"/>
		</list>
	</property>
</bean>

<bean id="circulo" class="com.mitocode.beans.Circulo"/>

<!-- Singleton y Protoype -->

<!--  
- Prototype , la carga es a medida que se invoca getBean.
- Con lazy=true, los beans no son instanciados automaticamente cuando se levanta la app , instanciados cuando se le requiera.
- la interfaz BeanFactory hace que todos los beans sean lazy.
- Lazy loading ! solo aplica cuando el scope es singleton.
-->

<bean id="personaScope" class="com.mitocode.beans.Persona2" scope="singleton" lazy-init="true">
	<property name="id" value="1"/>
	<property name="nombre" value="Cesar"/>
	<property name="apodo" value="tmac"/>
	<property name="pais" ref="pais"/>
</bean>

<!-- callbacks  , ciclo de vida de los beans-->
<bean id="triangulo2" class="com.mitocode.beans.Triangulo2">
	<property name="puntoB" ref="puntoB"></property>
	<property name="puntoC" ref="puntoC"></property>	
</bean>
<bean id="triangulo3" class="com.mitocode.beans.Triangulo3" init-method="miInicializacion" destroy-method="miDestruccion">
	<property name="puntoB" ref="puntoB"></property>
	<property name="puntoC" ref="puntoC"></property>	
</bean>
<!-- to recognize the java annotations -->
<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

<!-- Using annotations -> @PostContruct and @PreDestroy -->
<bean id="triangulo4" class="com.mitocode.beans.Triangulo4">
	<property name="puntoB" ref="puntoB"></property>
	<property name="puntoC" ref="puntoC"></property>	
</bean>

<!-- BeanPostProcessor , Evaluates every bean that is mapped in this file 
It is executed when this file is uploaded, so it is executed before every single bean !-->

<bean class="com.mitocode.beans.MyCodeBeanPostProcessor"/>



<bean id="messi" class="com.mitocode.beans.Jugador">
	<property name="numero" value="10"></property>
	<property name="nombre" value="Lionel Messi"></property>
	<!--  <property name="equipo" ref="barcelona"></property>-->

</bean>

<bean id="barcelona" class="com.mitocode.beans.Barcelona">
	<qualifier value="barcelonaQualifier"></qualifier>
</bean>

<bean id="manchester" class="com.mitocode.beans.Manchester"/>

<!-- TIP: Check: xmlns:context (on top) , should be present -->

<!-- When we use required or autowired annotation, itÂ´s needed to use PostProcessors
in order to see the description of the exception instead of NullPointerException-->
					<!-- POST PROCESSORS !!! -->
<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>
<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
					
						<!-- OR -->
<!-- We can replace the post-processor annotations and then use : -->
<!-- In order to recognize any spring annotation, it is faster-->
<context:annotation-config/>


			<!-- STEREOTYPES -->
			
<!-- Scan that package that includes the spring stereotypes -->
<!-- No needed to define beans anymore -->
<context:component-scan base-package="com.mitocode.beans"></context:component-scan>

<!-- Diference between context:annotation-config and context:component-scan -->
<!-- context:annotation-config only recognize some annotation (JSR-250) like autowired or qualifier -->
<!-- When we use :  context:component-scan  ,   context:annotation-config is optional-->



</beans>
